1.简单队列
   队列:1个
   消息提供方:1个
   消息接收方:1个
  实现了消息的异步发送与处理 降低服务端请求的处理时间  一个消息只能被一个消费者消费
  缺陷:
     消息处理吞吐量不高  可能会造成消息的堆积(消费者仅有一个  当生产者产生消息的速率远高于消费者消费消息的速率)


2.工作队列-轮询
   消费者:多个
   特点:消息被平均分配  提高了消息单位时间内的处理效率 提高消息处理的吞吐量
      缺陷:计算机资源被浪费(消息处理快的一方 )

3.工作队列-公平分发(常用)
   消费者:多个
   特点:"能者多劳"  最大限度利用计算机资源  提高了消息单位时间内的处理效率 提高消息处理的吞吐量
4.发布与订阅-fanout
   生产者
   交换机:接收生产者产生的消息 然后分发消息到指定队列(绑定到交换机的队列 自身不存储消息)
   队列:多个 (必须绑定到交换机)
   消费者:多个

   特点:一个消息可以被多个消费者同时消费

5.发布与订阅-direct
     生产者
     交换机:接收生产者产生的消息 然后分发消息到指定队列(绑定到交换机的队列 自身不存储消息)
     队列:多个 (必须绑定到交换机)
     消费者:多个
    特点:交换机路由消息时提供指定的routingkey  根据绑定的key(可以为多个) 决定队列是否收到交换机路由的消息
    绑定的key 不灵活

6.发布与订阅-topic（使用频率较高）
        生产者
        交换机:接收生产者产生的消息 然后分发消息到指定队列(绑定到交换机的队列 自身不存储消息)
        队列:多个 (必须绑定到交换机)
        消费者:多个
       特点:交换机路由消息时提供指定的routingkey  根据绑定的key(模式匹配串  根据单词进行匹配) 决定队列是否收到交换机路由的消息
         “.”:用于分割单词
         “*”:用于匹配一个单词 必须存在
         “#”:用于匹配多个单词(>=0)
       对于key 的绑定更加灵活 适合生产环境
7.rpc-请求应答模式
    客户端(生产者+消费者):
        发送消息(消息id)
        指定回复队列
    服务端(生产者+消费者)
       接收消息
       处理结果并将结果存入回复队列





